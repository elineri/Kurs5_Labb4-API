// <auto-generated />
using Labb4_API.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Labb4_API.Migrations
{
    [DbContext(typeof(InterestDbContext))]
    partial class InterestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Labb4_Models.Interest", b =>
                {
                    b.Property<int>("InterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestId");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            InterestId = 1,
                            Description = "Floorball is a type of floor hockey with five players and a goalkeeper in each team",
                            InterestName = "Floorball"
                        },
                        new
                        {
                            InterestId = 2,
                            Description = "The dog or domestic dog is a domesticated descendant of the wolf which is characterized by an upturning tail",
                            InterestName = "Dogs"
                        },
                        new
                        {
                            InterestId = 3,
                            Description = "Valheim is a survival and sandbox video game by the Swedish developer Iron Gate Studio",
                            InterestName = "Valheim"
                        },
                        new
                        {
                            InterestId = 4,
                            Description = "World of Warcraft is a massively multiplayer online role-playing game released in 2004 by Blizzard Entertainment",
                            InterestName = "World of Warcraft"
                        },
                        new
                        {
                            InterestId = 5,
                            Description = "Interior design is the art and science of enhancing the interior of a building to achieve a healthier and more aesthetically pleasing environment for the people using the space",
                            InterestName = "Interior Design"
                        },
                        new
                        {
                            InterestId = 6,
                            Description = "Carpenters are skilled artisans who construct, erect, install and renovate structures made of wood and other materials, ranging from kitchen cabinets to building frameworks",
                            InterestName = "Carpenter"
                        },
                        new
                        {
                            InterestId = 7,
                            Description = "Fashion is a form of self-expression and autonomy at a particular period and place and in a specific context, of clothing, footwear, lifestyle, accessories, makeup, hairstyle, and body posture",
                            InterestName = "Fashion"
                        },
                        new
                        {
                            InterestId = 8,
                            Description = "Counter-Strike is a series of multiplayer first-person shooter video games in which teams of terrorists battle to perpetrate an act of terror while counter-terrorists try to prevent it",
                            InterestName = "Counter-Strike"
                        });
                });

            modelBuilder.Entity("Labb4_Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            FirstName = "Elin",
                            LastName = "Ericstam",
                            PhoneNumber = "0701234567"
                        },
                        new
                        {
                            PersonId = 2,
                            FirstName = "Göran",
                            LastName = "Svensson",
                            PhoneNumber = "0713456789"
                        },
                        new
                        {
                            PersonId = 3,
                            FirstName = "Klas",
                            LastName = "Johansson",
                            PhoneNumber = "0739834572"
                        },
                        new
                        {
                            PersonId = 4,
                            FirstName = "Siv",
                            LastName = "Skog",
                            PhoneNumber = "0742927172"
                        },
                        new
                        {
                            PersonId = 5,
                            FirstName = "Peter",
                            LastName = "Bok",
                            PhoneNumber = "0701635567"
                        },
                        new
                        {
                            PersonId = 6,
                            FirstName = "Amanda",
                            LastName = "Ask",
                            PhoneNumber = "0701234123"
                        });
                });

            modelBuilder.Entity("Labb4_Models.PersonInterestLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("WebsiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InterestId");

                    b.HasIndex("PersonId");

                    b.HasIndex("WebsiteId");

                    b.ToTable("PersonInterestLinks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InterestId = 2,
                            PersonId = 1,
                            WebsiteId = 2
                        },
                        new
                        {
                            Id = 2,
                            InterestId = 2,
                            PersonId = 1,
                            WebsiteId = 3
                        },
                        new
                        {
                            Id = 3,
                            InterestId = 1,
                            PersonId = 2,
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 4,
                            InterestId = 3,
                            PersonId = 3,
                            WebsiteId = 4
                        },
                        new
                        {
                            Id = 5,
                            InterestId = 3,
                            PersonId = 3,
                            WebsiteId = 5
                        },
                        new
                        {
                            Id = 6,
                            InterestId = 4,
                            PersonId = 4,
                            WebsiteId = 6
                        },
                        new
                        {
                            Id = 7,
                            InterestId = 5,
                            PersonId = 5,
                            WebsiteId = 7
                        },
                        new
                        {
                            Id = 8,
                            InterestId = 5,
                            PersonId = 5,
                            WebsiteId = 8
                        },
                        new
                        {
                            Id = 9,
                            InterestId = 6,
                            PersonId = 6,
                            WebsiteId = 9
                        },
                        new
                        {
                            Id = 10,
                            InterestId = 7,
                            PersonId = 4,
                            WebsiteId = 10
                        },
                        new
                        {
                            Id = 11,
                            InterestId = 7,
                            PersonId = 4,
                            WebsiteId = 11
                        },
                        new
                        {
                            Id = 12,
                            InterestId = 8,
                            PersonId = 2,
                            WebsiteId = 12
                        });
                });

            modelBuilder.Entity("Labb4_Models.Website", b =>
                {
                    b.Property<int>("WebsiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WebsiteId");

                    b.ToTable("Websites");

                    b.HasData(
                        new
                        {
                            WebsiteId = 1,
                            Link = "https://floorball.sport/",
                            LinkDescription = "International Floorball Federation"
                        },
                        new
                        {
                            WebsiteId = 2,
                            Link = "https://www.nationalgeographic.com/animals/mammals/facts/domestic-dog",
                            LinkDescription = "National Geographic Dog facts"
                        },
                        new
                        {
                            WebsiteId = 3,
                            Link = "https://dogtime.com/dog-breeds/profiles",
                            LinkDescription = "Dog breeds"
                        },
                        new
                        {
                            WebsiteId = 4,
                            Link = "https://valheim.fandom.com/wiki/Valheim_Wiki",
                            LinkDescription = "Valheim wiki"
                        },
                        new
                        {
                            WebsiteId = 5,
                            Link = "https://www.valheimgame.com/",
                            LinkDescription = "Valheims website"
                        },
                        new
                        {
                            WebsiteId = 6,
                            Link = "https://wowpedia.fandom.com/wiki/Wowpedia",
                            LinkDescription = "WoW wiki"
                        },
                        new
                        {
                            WebsiteId = 7,
                            Link = "https://interiordesign.net/",
                            LinkDescription = "Interior design"
                        },
                        new
                        {
                            WebsiteId = 8,
                            Link = "https://www.dezeen.com/interiors/",
                            LinkDescription = "Dezeen interior design"
                        },
                        new
                        {
                            WebsiteId = 9,
                            Link = "https://www.webfactory.co.uk/portfolio-sectors?i=19&c=Carpenter",
                            LinkDescription = "Carpenter Website Design Examples"
                        },
                        new
                        {
                            WebsiteId = 10,
                            Link = "https://www.elle.se/",
                            LinkDescription = "Elle"
                        },
                        new
                        {
                            WebsiteId = 11,
                            Link = "https://www.vogue.com/",
                            LinkDescription = "Vogue"
                        },
                        new
                        {
                            WebsiteId = 12,
                            Link = "https://csgostash.com/",
                            LinkDescription = "CS:GO Stash"
                        });
                });

            modelBuilder.Entity("Labb4_Models.PersonInterestLink", b =>
                {
                    b.HasOne("Labb4_Models.Interest", "Interest")
                        .WithMany("PersonInterestLinks")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb4_Models.Person", "Person")
                        .WithMany("PersonInterestLinks")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb4_Models.Website", "Website")
                        .WithMany("PersonInterestLinks")
                        .HasForeignKey("WebsiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
